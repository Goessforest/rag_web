"""
Django settings for hello_project project.

Generated by 'django-admin startproject' using Django 4.2.17.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path
import logging

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-9c_tmf*6z=_-i_9!g16q8mvg1+edlzv_t)v1yp#212@1mtk+o)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'chat'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'personal_RAG.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'personal_RAG.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
# if os.environ.get("ENVIRONMENT_TYPE") == "DEV":
#     logging.info("DEV")
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',  # The PostgreSQL engine
        'NAME': os.environ.get('DB_NAME', 'vector_db'),                       # The name of your database
        'USER': os.environ.get('DB_USER', 'jakobprivat'),                   # The PostgreSQL user
        'PASSWORD': os.environ["DB_PASSWORD"],                   # The user’s password
        'HOST': os.environ.get('DB_HOST', 'localhost'),                # Originaly 'localhost'   
        'PORT': os.environ.get('DB_PORT', '5432'),
    }
}
# elif os.environ.get("ENVIRONMENT_TYPE") == "PROD":
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.postgresql',  # The PostgreSQL engine
#             'NAME': 'mydatabase',                       # The name of your database
#             'USER': 'jakobprivat',                   # The PostgreSQL user
#             'PASSWORD': 'mypassword',                   # The user’s password
#             'HOST': 'localhost',                        # Typically 'localhost' or an IP
#             'PORT': '5432',                             # Default PostgreSQL port
#         }
#     }
# else:
#     logging.ERROR("NO ENVIRONMENT_TYPE SET")
#     raise TypeError("NO ENVIRONMENT_TYPE SET")

#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.sqlite3',
#             'NAME': BASE_DIR / 'db.sqlite3',
#         }
#     }


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/chat/'  # Redirect after successful login
LOGOUT_REDIRECT_URL = '/login/'  # Redirect after logout

